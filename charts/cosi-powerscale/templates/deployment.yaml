apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cosi.fullname" . }}
  labels:
    {{- include "cosi.labels" . | trim | nindent 4 }}
  {{- with .Values.rbac.role.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cosi.selectorLabels" . | trim | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "cosi.labels" . | trim | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cosi.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: cosi-powerscale
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.provisioner.image.repository }}:{{ .Values.provisioner.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.provisioner.image.pullPolicy }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          envFrom:
          - configMapRef:
              name: "{{ include "cosi.fullname" . }}-config"
          env:
          - name: POWERSCALE_API_USERNAME
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.config.apiSecret }}"
                key: username
          - name: POWERSCALE_API_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.config.apiSecret }}"
                key: password
          {{- if .Values.config.tlsClientCertSecret }}
          - name: POWERSCALE_TLS_CLIENT_CERT
            value: "/client-cert/tls.crt"
          - name: POWERSCALE_TLS_CLIENT_KEY
            value: "/client-cert/tls.key"
          {{- end }}
          {{- if .Values.config.tlsCacertConfigMap }}
          - name: POWERSCALE_TLS_CACERT
            value: "/cacert/{{ .Values.config.tlsCacertConfigMapKey }}"
          {{- end }}
          volumeMounts:
          - name: cosi-socket-dir
            mountPath: /var/lib/cosi/
          {{- if .Values.config.tlsClientCertSecret }}
          - name: client-cert
            mountPath: /client-cert
          {{- end }}
          {{- if .Values.config.tlsCacertConfigMap }}
          - name: cacert
            mountPath: /cacert
          {{- end }}
        - name: cosi-sidecar
          image: "{{ .Values.sidecar.image.repository }}:{{ .Values.sidecar.image.tag }}"
          imagePullPolicy: {{ .Values.sidecar.image.pullPolicy }}
          args:
            - "-v={{ include "cosi.provisionerSidecarVerbosity" . }}"
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
          - name: cosi-socket-dir
            mountPath: /var/lib/cosi/
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: cosi-socket-dir
        emptyDir: {}
      {{- with .Values.config.tlsClientCertSecret }}
      - name: client-cert
        secret:
          secretName: "{{ . }}"
      {{- end }}
      {{- with .Values.config.tlsCacertConfigMap }}
      - name: cacert
        configMap:
          name: "{{ . }}"
      {{- end }}
